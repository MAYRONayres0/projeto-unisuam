@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@500&display=swap');

/* Define as propriedades a todos os elementos
   da página. */
* {
    /* Remove a margem externa de todos os lados
       do elemento. */
    margin: 0;

    /* Remove o espaçamento interno de todos os
       lados do elemento. */
    padding: 0;

    /* O preenchimento e a borda serão incluídos
       na largura e na altura. */
    box-sizing: border-box;

    /* Define o tipo da fonte */
    font-family: "Ubuntu", sans-serif;

}

body {
    /* Torna o elemento um flex container,
       transformando todos os seus elementos
       internos (filhos) em flex itens. */
    display: flex;

    /* Alinha os flex itens de acordo com o eixo
       do container. */
    align-items: center;

    /* Alinha os itens flex no container de
       acordo com a direção. */
    justify-content: center;

    /* Altura mínima do elemento. */
    /* Unidade de tamanho da tela vh e vw. */
    min-height: 100vh;

    background: #2e2e2e;
}

div#parallelogram {
    /* Cor do elemento */
    background: #ff0000;

    /* Define a largura do elemento. */
    width: 1000px;

    /* Define a altura do elemento. */
    height: 720px;

    /* Delimita o tamanho maximo do elemento. */
    max-width: 70vw;

    /* Arredonda cantos. */
    border-radius: 10px;

    /* Adicionando sombra nos elementos. */
    box-shadow: 5px 5px 15px;

    /* Modifica a inclinação do elemento em
       um plano 2D. */
    /* Parâmetros: eixo x , eixo y. em graus. */
    transform: skew(6deg, 3deg);

    /* Posiciona qualquer elemento de acordo com
       o elemento pai, Deixando de fazer parte do fluxo comum do documento. */
    position: absolute;

    /* Define a ordem dos elementos quando
       sobrepostos. */
    z-index: -1;
}

section {
    display: flex;

    /* Cor do elemento */
    background: #000000;

    /* Gerar espaço ao redor do conteúdo do elemento
       30px superior e inferior
       5 px para a esquerda e direita. */
    padding: 30px 5px;

    /* Arredonda cantos. */
    border-radius: 10px;

    /* Adiciona sombra nos elementos. */
    box-shadow: 5px 5px 15px;

    /* Tamanho máximo do elemento */
    max-width: 70vw;
}

section h1 {
    padding: 40px 10px;
    color: white;
    /* Alinha o texto no centro. */
    text-align: center;
}

fieldset {
    /* Remove a borda. */
    border: none;
}

fieldset:nth-child(2) {
    /* Vai alinhar os elementos
       um ao lado do outro. */
    display: flex;
}

fieldset:nth-child(4) {
    display: flex;

    /* Adiciona margem na parte superior. */
    padding-top: 20px;
}

fieldset:nth-child(5) {
    display: flex;
    width: 100%;
    margin-top: 20px;
    padding: 0px 10px;
}

.container input {
    margin: 10px 10px;

    /* Define a largura do elemento. */
    width: calc(100% - 20%);

    /* Define a altura do elemento. */
    height: 70px;

    /* Remove a borda. */
    border: none;

    background-color: #ffffff;

    border-radius: 4px;

    /* Cor da fonte. */
    color: #333;

    /* Tamanho da fonte. */
    font-size: 18px;

    /* Aumenta a largura do contorno do texto. */
    font-weight: 700;

    /* Gera espaço ao redor do conteúdo do elemento
       (superior, direito, inferior e esquerdo) */
    padding: 14px 10px 0 10px;
}

.container {
    /* Relative - indica que está posicionado
       em relação á sua posição normal. */
    position: relative;
}

.container label {
    /* Transforma o texto deixando todas as letras
       em maiúsculo. */
    text-transform: uppercase;

    font-size: 14px;

    font-weight: 700;

    color: #9d9d9d;

    /* Posiciona qualquer elemento de acordo com o
       elemento pai, deixando de fazer parte do fluxo
       comum do documento. */
    position: absolute;

    /* Define a altura entre linha. */
    line-height: 70px;

    /* Posição vertical que necessita que o elemento
       tenha uma posição determinada. */
    top: 10px;

    /* Distancia da borda esquerda. */
    left: 20px;

    /* Impede a seleção de texto. */
    user-select: none;

    /* Se o elemento deve agir ou não a
       eventos do ponteiro. */
    pointer-events: none;
    
    /* Altera os valores das propriedades
       suavemente em um tempo determinado. */
    transition: 0.5s;
}

/* ~ - Quando ocorrer o foco no input
   altere as propriedades do label. */
.container input:focus ~ label,
.container input:valid ~ label {
    left: 20px;
    top: -10px;
    color: #ff0606;
}

#check {
    width: 50%;
    text-transform: uppercase;
    font-size: 14px;
    display: flex;
}

#check input {
    width: 25px;
    height: 25px;

    /* auto - Centraliza o elemento na horizontal.
       0 - Não altera a margem esquerda e direita. */
    margin: auto 0;
}

#check label {
    margin: auto 10px;
    color: #555;
    transition: 0.5s;
}

#check input:checked ~ label,
#check input:valid ~ label {
    color: #000000;
}

button {
    margin: 40px 0;
    margin-left: 10px;

    /* Ocupar metade do fieldset descontando a
       margin de 10px */
    width: calc(50% - 10px);
    height: 70px;

    background: #feffff;
    color: #010000;
    font-size: 20px;
    border: none;
    border-radius: 20px;

    /* Muda o ponteiro do mouse. */
    cursor: pointer;

    /* Linear - Mesma velocidade do início ao fim. */
    transition: 0.3s linear;
}

button:hover {
    /* Altera a transparência do elemento. */
    opacity: 0.85;
}

form a {
    /* Remove a decoração padrão do elemento
       Na tag a "link" remove o traço inferior. */
    text-decoration: none;

    font-size: 16px;

    color: #555;

    font-weight: 500;

    padding-top: 20px;

    text-transform: uppercase;

    text-align: center;

    /* Exibe o elemento em bloco.
       Ele começa em uma nova linha e ocupa
       toda a largura. */
    display: block;
}

form a:hover {
    color: #111;
}

section img {
    width: 250px;
    height: 250px;

    /* auto - Centraliza horizontalmente
       o elemento em seu conteiner. */
    margin: auto 40px;
}

@media only screen and (max-width: 1080px) {
    div#parallelogram {
        height: 690px;
    }

    section img {
        display: none;
    }
}

@media only screen and (max-width: 510px) {
    div#parallelogram {
        display: none;
    }
    
    section {
        min-width: 95vw;
    }

    form {
        width: 100%;
    }

    fieldset:nth-child(2),
    fieldset:nth-child(4),
    fieldset:nth-child(5) {
        flex-direction: column;
    }

    fieldset:nth-child(4) {
        padding: 0px;
    }

    div#check {
        width: 100%;
    }

    button {
        width: 100%;
        margin-left: 0;
    }
}
#https://www.kabum.com.br/produto/504136/monitor-gamer-curvo-concordia-27-100hz-led-full-hd-hdmi-vga-cz270f?utm_id=21434223550&gad_source=1&gad_campaignid=21430282493&gbraid=0AAAAADx-HyH6Y78dZVfaW4Z235qoMaToS&gclid=CjwKCAjwruXBBhArEiwACBRtHVqxN5civDFqczGlc9VSWndz4YW1c4UnZ5o84NEw-RF-J92SGdnSlxoCJzIQAvD_BwE
